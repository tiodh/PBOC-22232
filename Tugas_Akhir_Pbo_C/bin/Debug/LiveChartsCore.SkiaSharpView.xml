<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiveChartsCore.SkiaSharpView</name>
    </assembly>
    <members>
        <member name="T:LiveChartsCore.SkiaSharpView.Axis">
            <inheritdoc cref="T:LiveChartsCore.Kernel.Sketches.ICartesianAxis" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.CandlesticksSeries`1">
            <summary>
            Defines a candlesticks series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.CandlesticksSeries`2">
            <summary>
            Defines a candlesticks series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.CandlesticksSeries`3">
            <summary>
            Defines a candlesticks series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ColumnSeries`1">
            <summary>
            Defines a column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ColumnSeries`2">
            <summary>
            Defines a column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ColumnSeries`3">
            <summary>
            Defines a column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.DefaultPaint">
            <summary>
            Defines a default paint task.
            </summary>
            <seealso cref="T:LiveChartsCore.Drawing.IPaint`1" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.IsStroke">
            <summary>
            Gets or sets a value indicating whether this instance is stroke.
            </summary>
            <value>
            <c>true</c> if this instance is stroke; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.IsFill">
            <summary>
            Gets or sets a value indicating whether this instance is fill.
            </summary>
            <value>
            <c>true</c> if this instance is fill; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.ZIndex">
            <summary>
            Gets or sets the index of the z.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.CurrentTime">
            <summary>
            Gets or sets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.RemoveOnCompleted">
            <summary>
            Gets or sets a value indicating whether the element is removed when all the transitions complete.
            </summary>
            <value>
              <c>true</c> if remove on completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value>
            <c>true</c> if this instance is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.DefaultPaint.MotionProperties">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IAnimatable.MotionProperties"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.AddGeometryToPaintTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Adds the geometry to paint task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.CloneTask">
            <summary>
            Clones the task.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.GetGeometries(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Gets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.InitializeTask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Initializes the task.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.RemoveGeometryFromPainTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Removes the geometry from pain task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.ClearGeometriesFromPaintTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Removes all geometry from paint task.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.SetGeometries(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext}})">
            <summary>
            Sets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.SetTransition(LiveChartsCore.Drawing.Animation,System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.SetTransition(LiveChartsCore.Drawing.Animation,System.String[])"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.RemoveTransition(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.RemoveTransition(System.String[])"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.CompleteTransition(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransition(System.String[])"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.ApplyOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.RestoreOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.RestoreOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.GetClipRectangle(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.GetClipRectangle(LiveChartsCore.Motion.MotionCanvas{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.SetClipRectangle(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.LvcRectangle)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.SetClipRectangle(LiveChartsCore.Motion.MotionCanvas{`0},LiveChartsCore.Drawing.LvcRectangle)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.DefaultPaint.ReleaseCanvas(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ReleaseCanvas(LiveChartsCore.Motion.MotionCanvas{`0})" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Drawable">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IDrawable`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Drawable.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IDrawable`1.Draw(`0)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry">
            <summary>
            Defines a candlestick geometry.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.Width">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IFinancialGeometry`1.Width" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.Open">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IFinancialGeometry`1.Open" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.Close">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IFinancialGeometry`1.Close" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.Low">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IFinancialGeometry`1.Low" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CandlestickGeometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CircleGeometry">
            <summary>
            Defines a circle geometry.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CircleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CircleGeometry"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CircleGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.ColoredRectangleGeometry">
            <summary>
            Defines a rectangle geometry with a specified color.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.ColoredRectangleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.ColoredRectangleGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.ColoredRectangleGeometry.Color">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ISolidColorGeometry`1.Color" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.ColoredRectangleGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CubicBezierAreaGeometry">
            <summary>
            Defines an area drawn using cubic beziers.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CubicBezierAreaGeometry.OnDrawSegment(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.CubicBezierSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnDrawSegment(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CubicBezierAreaGeometry.OnOpen(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.CubicBezierSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnOpen(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.CubicBezierAreaGeometry.OnClose(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.CubicBezierSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnClose(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IDoughnutGeometry`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.CenterX">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CenterX" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.CenterY">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CenterY" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.Width">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.Width" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.Height">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.Height" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.StartAngle">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.StartAngle" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.SweepAngle">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.SweepAngle" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.PushOut">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.PushOut" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.InnerRadius">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.InnerRadius" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.CornerRadius">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CornerRadius" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.InvertedCornerRadius">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.InvertedCornerRadius" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.DoughnutGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IGeometry`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.X">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.X" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Y">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.Y" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.TransformOrigin">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.TransformOrigin" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.TranslateTransform">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.TranslateTransform" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.RotateTransform">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.RotateTransform" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.ScaleTransform">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.ScaleTransform" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.SkewTransform">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.SkewTransform" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Transform">
            <summary>
            Gets or sets the matrix transform.
            </summary>
            <value>
            The transform.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Opacity">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaintable`1.Opacity" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Stroke">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaintable`1.Stroke" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Fill">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaintable`1.Fill" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Parent">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IGeometry`1.Parent"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Draws the geometry in the user interface.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <summary>
            Called when the geometry is drawn.
            </summary>
            <param name="context">The context.</param>
            <param name="paint">The paint.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.Measure(LiveChartsCore.Drawing.IPaint{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Measures the geometry.
            </summary>
            <param name="drawableTask">The drawable task.</param>
            <returns>the size of the geometry.</returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <summary>
            Called when the geometry is measured.
            </summary>
            <param name="paintTasks">The paint task.</param>
            <returns>the size of the geometry</returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.ApplyCustomGeometryTransform(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Applies the geometry transform.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand">
            <summary>
            Defines a heat lane.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand"/> class.
            </summary>
            <param name="name">The name/</param>
            <param name="value">The value.</param>
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.PropertyChanged">
            <summary>
            Called when a property changes.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.Name">
            <summary>
            Gets or sets the land name.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.Value">
            <inheritdoc cref="P:LiveChartsCore.Geo.IWeigthedMapLand.Value"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatLand.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape">
            <summary>
            Defines a path geometry with a specified color.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>
            The color of the fill.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.HeatPathShape.CompleteTransition(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransition(System.String[])" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IPathGeometry`2" />
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry._commands">
            <summary>
            The commands
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.FirstCommand">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPathGeometry`2.FirstCommand" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.LastCommand">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPathGeometry`2.LastCommand" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.CountCommands">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPathGeometry`2.CountCommands" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.IsClosed">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPathGeometry`2.IsClosed" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.AddLast(LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.AddLast(LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.AddFirst(LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.AddFirst(LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.AddAfter(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath}},LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.AddAfter(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{`1}},LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.AddBefore(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath}},LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.AddBefore(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{`1}},LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.ContainsCommand(LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.ContainsCommand(LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.RemoveCommand(LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.RemoveCommand(LiveChartsCore.Drawing.IPathCommand{`1})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.RemoveCommand(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{SkiaSharp.SKPath}})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.RemoveCommand(System.Collections.Generic.LinkedListNode{LiveChartsCore.Drawing.IPathCommand{`1}})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.ClearCommands">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathGeometry`2.ClearCommands" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PathGeometry.CompleteTransition(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransition(System.String[])" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.ILabelGeometry`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.VerticalAlign">
            <summary>
            Gets or sets the vertical align.
            </summary>
            <value>
            The vertical align.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.HorizontalAlign">
            <summary>
            Gets or sets the horizontal align.
            </summary>
            <value>
            The horizontal align.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.Text">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILabelGeometry`1.Text" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.TextSize">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILabelGeometry`1.TextSize" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.Background">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILabelGeometry`1.Background" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.Padding">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILabelGeometry`1.Padding" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.LineHeight">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILabelGeometry`1.LineHeight" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LabelGeometry.ApplyCustomGeometryTransform(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.ApplyCustomGeometryTransform(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.ILineGeometry`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry.X1">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILineGeometry`1.X1" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry.Y1">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILineGeometry`1.Y1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.LineGeometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.OvalGeometry">
            <summary>
            Defines an oval geometry.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.OvalGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.OvalGeometry"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.OvalGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PopUpGeometry">
            <summary>
            Defines a pop-up geometry.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PopUpGeometry.Wedge">
            <summary>
            Gets or sets the wedge size.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PopUpGeometry.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.PopUpGeometry.Placement">
            <summary>
            Gets or sets the placement.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RectangleGeometry">
            <summary>
            Defines a rectangle geometry.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RectangleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RectangleGeometry"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RectangleGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RoundedRectangleGeometry">
            <summary>
            Defines a rounded rectangle geometry.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RoundedRectangleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RoundedRectangleGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RoundedRectangleGeometry.BorderRadius">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IRoundedGeometry`1.BorderRadius"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.RoundedRectangleGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry">
            <inheritdoc cref="T:LiveChartsCore.Drawing.ISizedGeometry`1" />
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.widthProperty">
            <summary>
            The width
            </summary>
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.heightProperty">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.matchDimensions">
            <summary>
            The match dimensions
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.Width">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ISizedGeometry`1.Width" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.Height">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ISizedGeometry`1.Height" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnMeasure(LiveChartsCore.SkiaSharpView.Painting.Paint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SquareGeometry">
            <summary>
            Defines a square geometry.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SquareGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SquareGeometry"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SquareGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.StepLineAreaGeometry">
            <summary>
            Defines an area drawin using bezier segments.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.StepLineAreaGeometry.OnDrawSegment(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.StepLineSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnDrawSegment(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.StepLineAreaGeometry.OnOpen(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.StepLineSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnOpen(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.StepLineAreaGeometry.OnClose(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,LiveChartsCore.Drawing.Segments.StepLineSegment)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnClose(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry">
            <summary>
            Defines a geometry that is built using from a svg path.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SizedGeometry" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.#ctor">
            <summary>
            Inieializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.#ctor(SkiaSharp.SKPath)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry"/> class.
            </summary>
            <param name="svgPath">The SVG path.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.#ctor(System.Func{SkiaSharp.SKPath})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry"/> class,
            when <see cref="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.Path"/> is null, The path will be obtained from the <paramref name="pathSource"/> function.
            </summary>
            <param name="pathSource">The path source.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.FitToSize">
            <summary>
            Gets or sets whether the path should be fitted to the size of the geometry.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.SVGPathGeometry.DrawPath(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint,SkiaSharp.SKPath)">
            <summary>
            Draws the given path to the canvas.
            </summary>
            <param name="context">The context.</param>
            <param name="path">The path.</param>
            <param name="paint">The paint</param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1">
            <summary>
            Defines an area geometry.
            </summary>
            <typeparam name="TSegment">The type of the segment.</typeparam>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.Commands">
            <summary>
            Gets the commands in the vector.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.FirstCommand">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IVectorGeometry`2.FirstCommand" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.LastCommand">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IVectorGeometry`2.LastCommand" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.CountCommands">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IVectorGeometry`2.CountCommands" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.ClosingMethod">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IVectorGeometry`2.ClosingMethod" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.Pivot">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IVectorGeometry`2.Pivot" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.AddLast(`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.AddLast(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.AddFirst(`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.AddFirst(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.ContainsCommand(`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.ContainsCommand(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.RemoveCommand(`0)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.RemoveCommand(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.RemoveCommand(System.Collections.Generic.LinkedListNode{`0})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.RemoveCommand(System.Collections.Generic.LinkedListNode{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.ClearCommands">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IVectorGeometry`2.ClearCommands" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.CompleteTransition(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransition(System.String[])" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.Draw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.Geometry.OnDraw(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPaint)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnOpen(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)">
            <summary>
            Called when the area begins the draw.
            </summary>
            <param name="context">The context.</param>
            <param name="path">The path.</param>
            <param name="segment">The segment.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnClose(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)">
            <summary>
            Called to close the area.
            </summary>
            <param name="context">The context.</param>
            <param name="path">The path.</param>
            <param name="segment">The segment.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Geometries.VectorGeometry`1.OnDrawSegment(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,SkiaSharp.SKPath,`0)">
            <summary>
            Called to draw the segment.
            </summary>
            <param name="context">The context.</param>
            <param name="path">The path.</param>
            <param name="segment">The segment.</param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment">
            <inheritdoc cref="T:LiveChartsCore.Drawing.ILinePathSegment`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment.X">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILinePathSegment`1.X" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment.Y">
            <inheritdoc cref="P:LiveChartsCore.Drawing.ILinePathSegment`1.Y" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Segments.LineSegment.Execute(SkiaSharp.SKPath,System.Int64,LiveChartsCore.Drawing.Animatable)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathCommand`1.Execute(`0,System.Int64,LiveChartsCore.Drawing.Animatable)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IMoveToPathCommand`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand.X">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IMoveToPathCommand`1.X" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand.Y">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IMoveToPathCommand`1.Y" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Segments.MoveToPathCommand.Execute(SkiaSharp.SKPath,System.Int64,LiveChartsCore.Drawing.Animatable)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathCommand`1.Execute(`0,System.Int64,LiveChartsCore.Drawing.Animatable)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.Segments.PathCommand">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IPathCommand`1" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.Segments.PathCommand.Id">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPathCommand`1.Id" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.Segments.PathCommand.Execute(SkiaSharp.SKPath,System.Int64,LiveChartsCore.Drawing.Animatable)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPathCommand`1.Execute(`0,System.Int64,LiveChartsCore.Drawing.Animatable)" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext">
            <summary>
            Defines a skia sharp drawing context.
            </summary>
            <seealso cref="T:LiveChartsCore.Drawing.DrawingContext" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.#ctor(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},SkiaSharp.SKImageInfo,SkiaSharp.SKSurface,SkiaSharp.SKCanvas,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext"/> class.
            </summary>
            <param name="motionCanvas">The motion canvas.</param>
            <param name="info">The information.</param>
            <param name="surface">The surface.</param>
            <param name="canvas">The canvas.</param>
            <param name="clearOnBeginDraw">Indicates whether the canvas is cleared on frame draw.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.#ctor(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},SkiaSharp.SKImageInfo,SkiaSharp.SKSurface,SkiaSharp.SKCanvas,SkiaSharp.SKColor,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext"/> class.
            </summary>
            <param name="motionCanvas">The motion canvas.</param>
            <param name="info">The information.</param>
            <param name="surface">The surface.</param>
            <param name="canvas">The canvas.</param>
            <param name="background">The background.</param>
            <param name="clearOnBeginDraw">Indicates whether the canvas is cleared on frame draw.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.MotionCanvas">
            <summary>
            Gets or sets the motion canvas.
            </summary>
            <value>
            The motion canvas.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.Info">
            <summary>
            Gets or sets the information.
            </summary>
            <value>
            The information.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.Surface">
            <summary>
            Gets or sets the surface.
            </summary>
            <value>
            The surface.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.Canvas">
            <summary>
            Gets or sets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.PaintTask">
            <summary>
            Gets or sets the paint task.
            </summary>
            <value>
            The paint task.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.Paint">
            <summary>
            Gets or sets the paint.
            </summary>
            <value>
            The paint.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.Background">
            <summary>
            Gets or sets the background.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext.OnBeginDraw">
            <inheritdoc cref="M:LiveChartsCore.Drawing.DrawingContext.OnBeginDraw"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.DrawMarginFrame">
            <summary>
            Defines a visual frame in the draw margin of the chart.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.GaugeBuilder">
            <summary>
            Defines a helper class to build gauges.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.InnerRadius">
            <summary>
            Gets or sets the inner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithInnerRadius(System.Nullable{System.Double})">
            <summary>
            Sets the inner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
            <returns></returns>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.OffsetRadius">
            <summary>
            Gets or sets the offset radius, the separation between each gauge if multiple gauges are nested,
            setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithOffsetRadius(System.Nullable{System.Double})">
            <summary>
            Sets the offset radius, the separation between each gauge if multiple gauges are nested,
            setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
            <returns></returns>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of the radial column, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The maximum width of the radial column.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithMaxColumnWidth(System.Nullable{System.Double})">
            <summary>
            Sets the maximum width of the radial column, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.CornerRadius">
            <summary>
            Gets or sets the corner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithCornerRadius(System.Nullable{System.Double})">
            <summary>
            Sets the corner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.RadialAlign">
            <summary>
            Gets or sets the radial alignment, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithRadialAlign(System.Nullable{LiveChartsCore.Measure.RadialAlignment})">
            <summary>
            Sets the radial alignment, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.BackgroundInnerRadius">
            <summary>
            Gets or sets the background inner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The background inner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithBackgroundInnerRadius(System.Nullable{System.Double})">
            <summary>
            Sets the background inner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.BackgroundOffsetRadius">
            <summary>
            Gets or sets the background offset radius, the separation between each gauge if multiple gauges are nested,
            setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The background relative inner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithBackgroundOffsetRadius(System.Nullable{System.Double})">
            <summary>
            Sets the background offset radius, the separation between each gauge if multiple gauges are nested,
            setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.BackgroundMaxRadialColumnWidth">
            <summary>
            Gets or sets the width of the background maximum radial column, setting this property to null will let the theme
            decide the value, default is null.
            </summary>
            <value>
            The width of the background maximum radial column.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithBackgroundMaxRadialColumnWidth(System.Nullable{System.Double})">
            <summary>
            Sets the width of the background maximum radial column, setting this property to null will let the theme
            decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.BackgroundCornerRadius">
            <summary>
            Gets or sets the background corner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The background corner radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithBackgroundCornerRadius(System.Nullable{System.Double})">
            <summary>
            Sets the background corner radius, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithBackground(LiveChartsCore.Drawing.IPaint{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Sets the background.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.LabelsSize">
            <summary>
            Gets or sets the size of the labels, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The size of the labels.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithLabelsSize(System.Double)">
            <summary>
            Sets the size of the labels, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.LabelsPosition">
            <summary>
            Gets or sets the labels position, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <value>
            The labels position.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithLabelsPosition(LiveChartsCore.Measure.PolarLabelsPosition)">
            <summary>
            Sets  the labels position, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.GaugeBuilder.LabelFormatter">
            <summary>
            Gets or sets the label formatter.
            </summary>
            <value>
            The label formatter.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.WithLabelFormatter(System.Func{LiveChartsCore.Kernel.ChartPoint,System.String})">
            <summary>
            Sets  the labels position, setting this property to null will let the theme decide the value, default is null.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(LiveChartsCore.Defaults.ObservableValue,System.String,LiveChartsCore.Drawing.IPaint{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.IPaint{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <param name="seriesName">The series name.</param>
            <param name="seriesPaint">The series paint.</param>
            <param name="labelsPaint">The labels paint.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(LiveChartsCore.Defaults.ObservableValue,System.String,SkiaSharp.SKColor,System.Nullable{SkiaSharp.SKColor})">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <param name="seriesName">The series name.</param>
            <param name="seriesColor">Color of the series.</param>
            <param name="labelsColor">Color of the labels.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(System.Double,System.String,SkiaSharp.SKColor,System.Nullable{SkiaSharp.SKColor})">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <param name="seriesName">The series name.</param>
            <param name="seriesColor">Color of the series.</param>
            <param name="labelsColor">Color of the labels.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(LiveChartsCore.Defaults.ObservableValue)">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(System.Double)">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(LiveChartsCore.Defaults.ObservableValue,System.String)">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <param name="seriesName">The series name.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.AddValue(System.Double,System.String)">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
            <param name="seriesName">The series name.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.BuildSeries">
            <summary>
            Builds the series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.ApplyStyles(LiveChartsCore.SkiaSharpView.PieSeries{LiveChartsCore.Defaults.ObservableValue})">
            <summary>
            Applies the styles the specified series.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.ApplyStylesToFill(LiveChartsCore.SkiaSharpView.PieSeries{LiveChartsCore.Defaults.ObservableValue})">
            <summary>
            Applies the styles to fill series.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GaugeBuilder.ApplyStylesToSeries(LiveChartsCore.SkiaSharpView.PieSeries{LiveChartsCore.Defaults.ObservableValue})">
            <summary>
            Applies the styles to series.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.GeoMapCore">
            <inheritdoc cref="T:LiveChartsCore.Geo.CoreMap`1"/>.
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.GeoMapCore"/> class from the given core map.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.#ctor(LiveChartsCore.Geo.CoreMap{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.GeoMapCore"/> class from the given core map.
            </summary>
            <param name="coreMap"></param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.GetWorldMap">
            <inheritdoc cref="M:LiveChartsCore.Geo.Maps.GetWorldMap``1"/>.
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.GetMapFromDirectory(System.String)">
            <inheritdoc cref="M:LiveChartsCore.Geo.Maps.GetMapFromDirectory``1(System.String)"/>.
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.GetMapFromStreamReader(System.IO.StreamReader)">
            <inheritdoc cref="M:LiveChartsCore.Geo.Maps.GetMapFromStreamReader``1(System.IO.StreamReader)"/>.
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.GetMapFromDirectoryAsync(System.String)">
            <inheritdoc cref="M:LiveChartsCore.Geo.Maps.GetMapFromDirectory``1(System.String)"/>.
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.GeoMapCore.GetMapFromStreamReaderAsync(System.IO.StreamReader)">
            <inheritdoc cref="M:LiveChartsCore.Geo.Maps.GetMapFromStreamReader``1(System.IO.StreamReader)"/>.
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.HeatLandSeries">
            <inheritdoc cref="T:LiveChartsCore.HeatLandSeries`1"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.HeatLandSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.HeatLandSeries"/> class.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.HeatSeries`1">
            <summary>
            Defines a heat series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.HeatSeries`2">
            <summary>
            Defines a heat series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.HeatSeries`3">
            <summary>
            Defines a heat series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.HeatSeries`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.HeatSeries`3"/> class.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.LineSeries`1">
            <summary>
            Defines a line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.LineSeries`2">
            <summary>
            Defines a line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.LineSeries`3">
            <summary>
            Defines a line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp">
            <summary>
            Defines the default LiveCharts-SkiaSharp settings
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.DefaultPaint">
            <summary>
            Gets the default paint task.
            </summary>
            <value>
            The default paint.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.DefaultSKTypeface">
            <summary>
            Gets or sets an SKTypeface instance to use globally on any paint that does not specify any.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.DefaultPlatformBuilder">
            <summary>
            Gets the default platform builder.
            </summary>
            <value>
            The default platform builder.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.UseDefaults(LiveChartsCore.Kernel.LiveChartsSettings)">
            <summary>
            Configures LiveCharts using the default settings for SkiaSharp.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AddSkiaSharp(LiveChartsCore.Kernel.LiveChartsSettings)">
            <summary>
            Adds SkiaSharp as the backend provider for LiveCharts.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsSKColor(LiveChartsCore.Drawing.LvcColor,System.Nullable{System.Byte})">
            <summary>
            Converts a <see cref="T:LiveChartsCore.Drawing.LvcColor"/> to a <see cref="T:SkiaSharp.SKColor"/> instance.
            </summary>
            <param name="color">The color.</param>
            <param name="alphaOverrides">The alpha overrides.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.WithOpacity(LiveChartsCore.Drawing.LvcColor,System.Byte)">
            <summary>
            Creates a new color based on the 
            </summary>
            <param name="color">The color.</param>
            <param name="opacity">The opacity from 0 to 255.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsLvcColor(SkiaSharp.SKColor)">
            <summary>
            Converts a <see cref="T:SkiaSharp.SKColor"/> to a <see cref="T:LiveChartsCore.Drawing.LvcColor"/> intance.
            </summary>
            <param name="color">The color</param>
            <returns></returns>
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.SkiaFontMatchChar">
            <summary>
            Gets the <see cref="F:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.SkiaFontMatchChar"/> key.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.MatchChar(System.Char)">
            <summary>
            Matches
            </summary>
            <param name="char"></param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsPieSeries``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,LiveChartsCore.SkiaSharpView.PieSeries{``0}})">
            <summary>
            Converts an IEnumerable to an ObservableCollection of pie series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="source">The data source.</param>
            <param name="builder">An optional builder.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsPieSeries``2(System.Collections.Generic.IEnumerable{``0},System.Action{``0,LiveChartsCore.SkiaSharpView.PieSeries{``0,``1}})">
            <summary>
            Converts an IEnumerable to an ObservableCollection of pie series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <param name="source">The data source.</param>
            <param name="builder">An optional builder.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsPieSeries``3(System.Collections.Generic.IEnumerable{``0},System.Action{``0,LiveChartsCore.SkiaSharpView.PieSeries{``0,``1,``2}})">
            <summary>
            Converts an IEnumerable to an ObservableCollection of pie series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <param name="source">The data source.</param>
            <param name="builder">An optional builder.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.AsLiveChartsPieSeries``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,LiveChartsCore.SkiaSharpView.PieSeries{``0}})">
            <summary>
            Converts an IEnumerable to an ObservableCollection of pie series.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="source">The data source.</param>
            <param name="buider">An optional builder.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.LiveChartsSkiaSharp.GetDistanceTo(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Drawing.LvcPoint)">
            <summary>
            Calculates the distance in pixels from the target <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> to the given location in the UI.
            </summary>
            <param name="target">The target.</param>
            <param name="location">The location.</param>
            <returns>The distance in pixels.</returns>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.MapFactory">
            <summary>
            Defines a map builder.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.MapFactory.GenerateLands(LiveChartsCore.Geo.MapContext{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Geo.IMapFactory`1.GenerateLands(LiveChartsCore.Geo.MapContext{`0})"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.MapFactory.ViewTo(LiveChartsCore.GeoMap{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},System.Object)">
            <inheritdoc cref="M:LiveChartsCore.Geo.IMapFactory`1.ViewTo(LiveChartsCore.GeoMap{`0},System.Object)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.MapFactory.Pan(LiveChartsCore.GeoMap{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.LvcPoint)">
            <inheritdoc cref="M:LiveChartsCore.Geo.IMapFactory`1.Pan(LiveChartsCore.GeoMap{`0},LiveChartsCore.Drawing.LvcPoint)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.MapFactory.Dispose">
            <summary>
            Disposes the map factory.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty">
            <summary>
            Defines a motion property to handle the <see cref="T:SkiaSharp.SKMatrix"/> type.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty"/> class.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty.#ctor(System.String,SkiaSharp.SKMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty"/> class.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="matrix">The initial matrix.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Motion.SKMatrixMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:LiveChartsCore.Motion.MotionProperty`1.OnGetMovement(System.Single)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.Effects.DashEffect">
            <summary>
            Creates a stroke dash effect.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.DashEffect.#ctor(System.Single[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.Effects.DashEffect"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.DashEffect.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.DashEffect.CreateEffect(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the path effect.
            </summary>
            <param name="drawingContext">The drawing context.</param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect">
            <summary>
            A wrapper object for skia sharp path effects.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect.SKPathEffect">
            <summary>
            Gets or sets the sk path effect.
            </summary>
            <value>
            The sk path effect.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect.CreateEffect(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the path effect.
            </summary>
            <param name="drawingContext">The drawing context.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Effects.PathEffect.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.Blur">
            <summary>
            Creates a blur image filter.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.Blur.#ctor(System.Single,System.Single,SkiaSharp.SKImageFilter,SkiaSharp.SKImageFilter.CropRect)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.Blur"/> class.
            </summary>
            <param name="sigmaX">The sigma x.</param>
            <param name="sigmaY">The sigma y.</param>
            <param name="input">The input.</param>
            <param name="cropRect">The crop rect.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.Blur.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.Blur.CreateFilter(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the filter.
            </summary>
            <param name="drawingContext">The drawing context.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.DropShadow">
            <summary>
            Creates a drop shadow image filter.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.DropShadow.#ctor(System.Single,System.Single,System.Single,System.Single,SkiaSharp.SKColor,SkiaSharp.SKImageFilter,SkiaSharp.SKImageFilter.CropRect)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.DropShadow"/> class.
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <param name="sigmaX">The sigma x.</param>
            <param name="sigmaY">The sigma y.</param>
            <param name="color">The color.</param>
            <param name="input">The input.</param>
            <param name="cropRect">The crop rect.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.DropShadow.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.DropShadow.CreateFilter(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the image filter.
            </summary>
            <param name="drawingContext">The drawing context.</param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter">
            <summary>
            A wrapper object for skia sharp image filters.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter.SKImageFilter">
            <summary>
            Gets or sets the sk image filter.
            </summary>
            <value>
            The sk image filter.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter.CreateFilter(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the image filter.
            </summary>
            <param name="drawingContext">The drawing context.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation">
            <summary>
            Merges multiple image filters.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation.#ctor(LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFilter[],SkiaSharp.SKImageFilter.CropRect)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation"/> class.
            </summary>
            <param name="imageFilters">The image filters.</param>
            <param name="cropRect">The crop rect.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation.CreateFilter(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <summary>
            Creates the image filter.
            </summary>
            <param name="drawingContext">The drawing context.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.ImageFilters.ImageFiltersMergeOperation.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint">
            <summary>
            Defines a set of geometries that will be painted using a linear gradient shader.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.Paint" />
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.s_defaultStartPoint">
            <summary>
            Default start point.
            </summary>
        </member>
        <member name="F:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.s_defaultEndPoint">
            <summary>
            Default end point.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.#ctor(SkiaSharp.SKColor[],SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single[],SkiaSharp.SKShaderTileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint"/> class.
            </summary>
            <param name="gradientStops">The gradient stops.</param>
            <param name="startPoint">
            The start point, both X and Y in the range of 0 to 1, where 0 is the start of the axis and 1 the end.
            </param>
            <param name="endPoint">
            The end point, both X and Y in the range of 0 to 1, where 0 is the start of the axis and 1 the end.
            </param>
            <param name="colorPos">
            An array of integers in the range of 0 to 1.
            These integers indicate the relative positions of the colors, You can set that argument to null to equally
            space the colors, default is null.
            </param>
            <param name="tileMode">
            The shader tile mode, default is <see cref="F:SkiaSharp.SKShaderTileMode.Repeat"/>.
            </param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.#ctor(SkiaSharp.SKColor[])">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint"/> class.
            </summary>
            <param name="gradientStops">The gradient stops.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.#ctor(SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKPoint,SkiaSharp.SKPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint"/> class.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
            <param name="startPoint">
            The start point, both X and Y in the range of 0 to 1, where 0 is the start of the axis and 1 the end.
            </param>
            <param name="endPoint">
            The end point, both X and Y in the range of 0 to 1, where 0 is the start of the axis and 1 the end.
            </param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.#ctor(SkiaSharp.SKColor,SkiaSharp.SKColor)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.CloneTask">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.CloneTask" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.ApplyOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.RestoreOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.RestoreOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.InitializeTask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.InitializeTask(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.LinearGradientPaint.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.Paint">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IPaint`1" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.Paint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.#ctor(SkiaSharp.SKColor)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.Paint"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.ZIndex">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaint`1.ZIndex"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.StrokeThickness">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaint`1.StrokeThickness" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.IsStroke">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaint`1.IsStroke" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.IsFill">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaint`1.IsFill" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.FontFamily">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IPaint`1.FontFamily" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.SKFontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.SKTypeface">
            <summary>
            Gets or sets the SKTypeface, if null, LiveCharts will build one based on the
            <see cref="P:LiveChartsCore.SkiaSharpView.Painting.Paint.FontFamily"/> and <see cref="P:LiveChartsCore.SkiaSharpView.Painting.Paint.SKFontStyle"/> properties. Default is null.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.HasCustomFont">
            <summary>
            Gets a value indication whether the paint has a custom font.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.IsAntialias">
            <summary>
            Gets or sets a value indicating whether this instance is antialias.
            </summary>
            <value>
              <c>true</c> if this instance is antialias; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.StrokeCap">
            <summary>
            Gets or sets the stroke cap.
            </summary>
            <value>
            The stroke cap.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.StrokeJoin">
            <summary>
            Gets or sets the stroke join.
            </summary>
            <value>
            The stroke join.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.StrokeMiter">
            <summary>
            Gets or sets the stroke miter.
            </summary>
            <value>
            The stroke miter.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value>
            <c>true</c> if this instance is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.PathEffect">
            <summary>
            Gets or sets the path effect.
            </summary>
            <value>
            The path effect.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.Painting.Paint.ImageFilter">
            <summary>
            Gets or sets the image filer.
            </summary>
            <value>
            The image filer.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.InitializeTask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.InitializeTask(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.GetGeometries(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.GetGeometries(LiveChartsCore.Motion.MotionCanvas{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.SetGeometries(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext}})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.SetGeometries(LiveChartsCore.Motion.MotionCanvas{`0},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{`0}})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.AddGeometryToPaintTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.AddGeometryToPaintTask(LiveChartsCore.Motion.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.RemoveGeometryFromPainTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.IDrawable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.RemoveGeometryFromPainTask(LiveChartsCore.Motion.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.ClearGeometriesFromPaintTask(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ClearGeometriesFromPaintTask(LiveChartsCore.Motion.MotionCanvas{`0})"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.ReleaseCanvas(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ReleaseCanvas(LiveChartsCore.Motion.MotionCanvas{`0})"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.GetClipRectangle(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.GetClipRectangle(LiveChartsCore.Motion.MotionCanvas{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.SetClipRectangle(LiveChartsCore.Motion.MotionCanvas{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},LiveChartsCore.Drawing.LvcRectangle)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.SetClipRectangle(LiveChartsCore.Motion.MotionCanvas{`0},LiveChartsCore.Drawing.LvcRectangle)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.CloneTask">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.CloneTask" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.ApplyOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.RestoreOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.Paint.GetSKTypeface">
            <summary>
            Gets a <see cref="P:LiveChartsCore.SkiaSharpView.Painting.Paint.SKTypeface"/> from the <see cref="P:LiveChartsCore.SkiaSharpView.Painting.Paint.FontFamily"/> property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.PaintTask">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IPaint`1" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint">
            <summary>
            Defines a set of geometries that will be painted using a radial gradient shader.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.Paint" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.#ctor(SkiaSharp.SKColor[],System.Nullable{SkiaSharp.SKPoint},System.Single,System.Single[],SkiaSharp.SKShaderTileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint"/> class.
            </summary>
            <param name="gradientStops">The gradient stops.</param>
            <param name="center">
            The center point of the gradient, both X and Y in the range of 0 to 1, where 0 is the start of the axis and 1 the end,
            default is (0.5, 0.5).
            </param>
            <param name="radius">
            The radius, in the range of 0 to 1, where 1 is the minimum of both Width and Height of the chart, default is 0.5.
            </param>
            <param name="colorPos">
            An array of integers in the range of 0 to 1.
            These integers indicate the relative positions of the colors, You can set that argument to null to equally
            space the colors, default is null.
            </param>
            <param name="tileMode">
            The shader tile mode, default is <see cref="F:SkiaSharp.SKShaderTileMode.Repeat"/>.
            </param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.#ctor(SkiaSharp.SKColor,SkiaSharp.SKColor)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint"/> class.
            </summary>
            <param name="centerColor">Color of the center.</param>
            <param name="outerColor">Color of the outer.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.CloneTask">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.CloneTask" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.InitializeTask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.InitializeTask(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.ApplyOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.RestoreOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.RestoreOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.RadialGradientPaint.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint">
            <summary>
            Defines a set of geometries that will be painted using a solid color.
            </summary>
            <seealso cref="T:LiveChartsCore.SkiaSharpView.Painting.Paint" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.#ctor(SkiaSharp.SKColor)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.#ctor(SkiaSharp.SKColor,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint"/> class.
            </summary>
            <param name="color">The color.</param>
            <param name="strokeWidth">Width of the stroke.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.CloneTask">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.CloneTask" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.InitializeTask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.InitializeTask(`0)" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.ApplyOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.ApplyOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.RestoreOpacityMask(LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext,LiveChartsCore.Drawing.IPaintable{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IPaint`1.RestoreOpacityMask(`0,LiveChartsCore.Drawing.IPaintable{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.Painting.SolidColorPaint.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PieSeries`1">
            <summary>
            Defines a pie series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.PieSeries`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.PieSeries`1"/> class.
            </summary>
            <param name="isGauge"></param>
            <param name="isGaugeFill"></param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PieSeries`2">
            <summary>
            Defines a pie series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.PieSeries`2.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.PieSeries`2"/> class.
            </summary>
            <param name="isGauge"></param>
            <param name="isGaugeFill"></param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PieSeries`3">
            <summary>
            Defines a pie series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.PieSeries`3.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.PieSeries`3"/> class.
            </summary>
            <param name="isGauge"></param>
            <param name="isGaugeFill"></param>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PolarAxis">
            <inheritdoc cref="T:LiveChartsCore.Kernel.Sketches.ICartesianAxis" />
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PolarLineSeries`1">
            <summary>
            Defines a polar line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PolarLineSeries`2">
            <summary>
            Defines a polar line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.PolarLineSeries`3">
            <summary>
            Defines a polar line series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.RectangularSection">
            <summary>
            Defines a rectangular section in a Cartesian chart.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.RowSeries`1">
            <summary>
            Defines a row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam> data label of every point.
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.RowSeries`2">
            <summary>
            Defines a row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.RowSeries`3">
            <summary>
            Defines a row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ScatterSeries`1">
            <summary>
            Defines a scatter series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ScatterSeries`2">
            <summary>
            Defines a scatter series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ScatterSeries`3">
            <summary>
            Defines a scatter series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart">
            <summary>
            A chart that is able to generate images or draw to a given canvas.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.CoreCanvas">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.CoreCanvas"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.CoreChart">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.CoreChart"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.GetImage">
            <summary>
            Gets the current <see cref="T:SkiaSharp.SKSurface"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.SaveImage(System.String,SkiaSharp.SKEncodedImageFormat,System.Int32)">
            <summary>
            Saves the image to the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="format">The format.</param>
            <param name="quality">The quality, an integer from 0 to 100.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.SaveImage(SkiaSharp.SKCanvas,System.Boolean)">
            <summary>
            Draws the image to the specified canvas.
            </summary>
            <param name="canvas">The canvas</param>
            <param name="clearCanvasOnBeginDraw">Indicates whether the canvas should be cleared when the draw starts, default is false.</param>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.DrawOnCanvas(SkiaSharp.SKCanvas,SkiaSharp.SKSurface,System.Boolean)">
            <summary>
            Draws the chart to the specified canvas.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="surface">The surface.</param>
            <param name="clearCanvasOnBeginDraw">[probably an obsolete param] Indicates whether the canvas should be cleared when the draw starts, default is false.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart">
            <summary>
            In-memory chart that is able to generate a chart images.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.#ctor(LiveChartsCore.Kernel.Sketches.ICartesianChartView{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.DesignerMode">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DesignerMode" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Core">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.Core"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.SyncContext">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.SyncContext"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.XAxes">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.XAxes"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.YAxes">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.YAxes"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Sections">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.Sections"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.VisualElements">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElements"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Series">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.Series"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.DrawMarginFrame">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.DrawMarginFrame"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ZoomMode">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.ZoomMode"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ZoomingSpeed">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.ZoomingSpeed"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.AutoUpdateEnabled">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.AutoUpdateEnabled"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.TooltipFindingStrategy">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.TooltipFindingStrategy"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Legend">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Legend"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Tooltip">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Tooltip"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.DrawMargin">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DrawMargin"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.AnimationsSpeed">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.AnimationsSpeed"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.EasingFunction">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.EasingFunction"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.UpdaterThrottler">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.UpdaterThrottler"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.LegendPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.LegendPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.TooltipPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.TooltipPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Title">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Title"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.LegendTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.LegendBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.LegendTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextSize"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.TooltipTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.TooltipBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.TooltipTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextSize"/>
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.Measuring">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.Measuring" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.UpdateStarted">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateStarted" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.UpdateFinished">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateFinished" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.DataPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.DataPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ChartPointPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.ChartPointPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.VisualElementsPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElementsPointerDown"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ScaleUIPoint(LiveChartsCore.Drawing.LvcPoint,System.Int32,System.Int32)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.ScaleUIPoint(LiveChartsCore.Drawing.LvcPoint,System.Int32,System.Int32)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ScalePixelsToData(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.ScalePixelsToData(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.ScaleDataToPixels(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.ICartesianChartView`1.ScaleDataToPixels(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKCartesianChart.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultLegend.FontPaint">
            <summary>
            Gets or sets the legend font paint.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultLegend.TextSize">
            <summary>
            Gets or sets the fonts size.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultLegend.Draw(LiveChartsCore.Chart{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartLegend`1.Draw(LiveChartsCore.Chart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultLegend.Measure(LiveChartsCore.Chart{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartLegend`1.Measure(LiveChartsCore.Chart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.FontPaint">
            <summary>
            Gets or sets the legend font paint.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.BackgroundPaint">
            <summary>
            Gets or sets the background paint.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.TextSize">
            <summary>
            Gets or sets the fonts size.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.Show(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.ChartPoint},LiveChartsCore.Chart{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartTooltip`1.Show(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.ChartPoint},LiveChartsCore.Chart{`0})" />
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKDefaultTooltip.Hide(LiveChartsCore.Chart{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartTooltip`1.Hide(LiveChartsCore.Chart{`0})"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap">
            <inheritdoc cref="T:LiveChartsCore.Geo.IGeoMapView`1"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.#ctor(LiveChartsCore.Geo.IGeoMapView{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap"/> class.
            </summary>
            <param name="mapView">The map view.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.AutoUpdateEnabled">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.AutoUpdateEnabled" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.SyncContext">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.SyncContext" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.DesignerMode">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.DesignerMode" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.ActiveMap">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.ActiveMap"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.Canvas">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.Canvas"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.MapProjection">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.MapProjection"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.Stroke">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.Stroke"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.Fill">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.Fill"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.Series">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.Series"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.ViewCommand">
            <inheritdoc cref="P:LiveChartsCore.Geo.IGeoMapView`1.ViewCommand"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKGeoMap.DrawOnCanvas(SkiaSharp.SKCanvas,SkiaSharp.SKSurface,System.Boolean)">
            <inheritdoc cref="M:LiveChartsCore.SkiaSharpView.SKCharts.InMemorySkiaSharpChart.DrawOnCanvas(SkiaSharp.SKCanvas,SkiaSharp.SKSurface,System.Boolean)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart">
            <summary>
            In-memory chart that is able to generate a chart images.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.#ctor(LiveChartsCore.Kernel.Sketches.IPieChartView{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.DesignerMode">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DesignerMode" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Core">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.Core"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.SyncContext">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.SyncContext"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Series">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.Series"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.VisualElements">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElements"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.InitialRotation">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.InitialRotation"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.MaxAngle">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.MaxAngle"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Total">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.Total"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.AutoUpdateEnabled">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.AutoUpdateEnabled"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Legend">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Legend"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Tooltip">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Tooltip"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.DrawMargin">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DrawMargin"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.AnimationsSpeed">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.AnimationsSpeed"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.EasingFunction">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.EasingFunction"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.UpdaterThrottler">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.UpdaterThrottler"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.LegendPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.LegendPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.TooltipPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.TooltipPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Title">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Title"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.IsClockwise">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPieChartView`1.IsClockwise"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.LegendTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.LegendBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.LegendTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextSize"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.TooltipTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.TooltipBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.TooltipTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextSize"/>
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.Measuring">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.Measuring" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.UpdateStarted">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateStarted" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.UpdateFinished">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateFinished" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.DataPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.DataPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.ChartPointPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.ChartPointPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.VisualElementsPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElementsPointerDown"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPieChart.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart">
            <summary>
            In-memory chart that is able to generate a chart images.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.#ctor(LiveChartsCore.Kernel.Sketches.IPolarChartView{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.DesignerMode">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DesignerMode" />
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Core">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.Core"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.SyncContext">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.SyncContext"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.AngleAxes">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.AngleAxes"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.RadiusAxes">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.RadiusAxes"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Series">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.Series"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.VisualElements">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElements"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Legend">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Legend"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Tooltip">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Tooltip"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.DrawMargin">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.DrawMargin"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.AnimationsSpeed">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.AnimationsSpeed"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.EasingFunction">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.EasingFunction"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.UpdaterThrottler">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.UpdaterThrottler"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.LegendPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.LegendPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.TooltipPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView.TooltipPosition"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.FitToBounds">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.FitToBounds"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.TotalAngle">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.TotalAngle"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.InnerRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.InnerRadius"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.InitialRotation">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.InitialRotation"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.AutoUpdateEnabled">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.AutoUpdateEnabled"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.LegendTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.LegendBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.LegendTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.LegendTextSize"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.TooltipTextPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.TooltipBackgroundPaint">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipBackgroundPaint"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.TooltipTextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.TooltipTextSize"/>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Title">
            <inheritdoc cref="P:LiveChartsCore.Kernel.Sketches.IChartView`1.Title"/>
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.Measuring">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.Measuring" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.UpdateStarted">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateStarted" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.UpdateFinished">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.UpdateFinished" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.DataPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.DataPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.ChartPointPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView.ChartPointPointerDown" />
        </member>
        <member name="E:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.VisualElementsPointerDown">
            <inheritdoc cref="E:LiveChartsCore.Kernel.Sketches.IChartView`1.VisualElementsPointerDown"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.ScalePixelsToData(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.ScalePixelsToData(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.ScaleDataToPixels(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IPolarChartView`1.ScaleDataToPixels(LiveChartsCore.Drawing.LvcPointD,System.Int32,System.Int32)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetPointsAt(LiveChartsCore.Drawing.LvcPoint,LiveChartsCore.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SKCharts.SKPolarChart.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Sketches.IChartView`1.GetVisualsAt(LiveChartsCore.Drawing.LvcPoint)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SkiaSharpProvider">
            <inheritdoc cref="T:LiveChartsCore.Kernel.Providers.ChartEngine`1"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SkiaSharpProvider.GetDefaultMapFactory">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Providers.ChartEngine`1.GetDefaultMapFactory"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SkiaSharpProvider.GetDefaultCartesianAxis">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Providers.ChartEngine`1.GetDefaultCartesianAxis"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SkiaSharpProvider.GetDefaultPolarAxis">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Providers.ChartEngine`1.GetDefaultPolarAxis"/>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.SkiaSharpProvider.GetSolidColorPaint(LiveChartsCore.Drawing.LvcColor)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.Providers.ChartEngine`1.GetSolidColorPaint(LiveChartsCore.Drawing.LvcColor)"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedAreaSeries`1">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedAreaSeries`2">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedAreaSeries`3">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedColumnSeries`1">
            <summary>
            Defines a stacked column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedColumnSeries`2">
            <summary>
            Defines a stacked column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedColumnSeries`3">
            <summary>
            Defines a stacked column series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedRowSeries`1">
            <summary>
            Defines a stacked row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedRowSeries`2">
            <summary>
            Defines a stacked row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedRowSeries`3">
            <summary>
            Defines a stacked row series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedStepAreaSeries`1">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedStepAreaSeries`2">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StackedStepAreaSeries`3">
            <summary>
            Defines a stacked area series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StepLineSeries`1">
            <summary>
            Defines a stepline series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StepLineSeries`2">
            <summary>
            Defines a stepline series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.StepLineSeries`3">
            <summary>
            Defines a stepline series in the user interface.
            </summary>
            <typeparam name="TModel">
            The type of the points, you can use any type, the library already knows how to handle the most common numeric types,
            to use a custom type, you must register the type globally 
            (<see cref="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})"/>)
            or at the series level 
            (<see cref="P:LiveChartsCore.Series`4.Mapping"/>).
            </typeparam>
            <typeparam name="TVisual">
            The type of the geometry of every point of the series.
            </typeparam>
            <typeparam name="TLabel">
            The type of the data label of every point.
            </typeparam>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.SVGPoints">
            <summary>
            A collections of SVG paths.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Diamond">
            <summary>
            A diamond.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Gem">
            <summary>
            A gem.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Star">
            <summary>
            A star.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Heart">
            <summary>
            A heart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Pin">
            <summary>
            A pin.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Triangle">
            <summary>
            A triangle.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Square">
            <summary>
            A square.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Circle">
            <summary>
            A circle.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Pentagon">
            <summary>
            A pentagon.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Cross">
            <summary>
            A cross mark.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.SVGPoints.Check">
            <summary>
            A check mark.
            </summary>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.ThemesExtensions">
            <summary>
            Defines the light theme extensions.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.ThemesExtensions.AddLightTheme(LiveChartsCore.Kernel.LiveChartsSettings,System.Action{LiveChartsCore.Themes.Theme{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext}})">
            <summary>
            Adds the light theme.
            </summary>
            <param name="settings">The settings.</param>
            <param name="additionalStyles">the additional styles.</param>
            <returns>The current LiveCharts settings.</returns>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.ThemesExtensions.AddDarkTheme(LiveChartsCore.Kernel.LiveChartsSettings,System.Action{LiveChartsCore.Themes.Theme{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext}})">
            <summary>
            Adds the dark theme.
            </summary>
            <param name="settings">The settings.</param>
            <param name="additionalStyles">The additional styles.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.BaseGeometryVisual">
            <inheritdoc cref="T:LiveChartsCore.VisualElements.BaseGeometryVisual`1"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.GeometryVisual`1">
            <inheritdoc cref="T:LiveChartsCore.VisualElements.GeometryVisual`3"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.LabelVisual">
            <inheritdoc cref="T:LiveChartsCore.VisualElements.LabelVisual`2"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.SVGVisual">
            <summary>
            Defines a visual element in a chart that draws a svg geometry in the user interface.
            </summary>
        </member>
        <member name="P:LiveChartsCore.SkiaSharpView.VisualElements.SVGVisual.Path">
            <summary>
            Gets or sets the SVG path.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.VisualElements.SVGVisual.OnInvalidated(LiveChartsCore.Chart{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext})">
            <inheritdoc cref="M:LiveChartsCore.VisualElements.VisualElement`1.OnInvalidated(LiveChartsCore.Chart{`0})"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.VariableGeometryVisual">
            <inheritdoc cref="T:LiveChartsCore.VisualElements.VariableGeometryVisual`1"/>
        </member>
        <member name="T:LiveChartsCore.SkiaSharpView.VisualElements.VisualElementsExtensions">
            <summary>
            Defines the visual elements extensions class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.SkiaSharpView.VisualElements.VisualElementsExtensions.AsDrawnControl(LiveChartsCore.Kernel.Drawing.Sketch{LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext},System.Int32)">
            <summary>
            Creates a relative panel control from a given sketch.
            </summary>
        </member>
    </members>
</doc>
